# ----------------------------------------
# Spring Application
# 프로젝트 이름지정
# 현재 실행할 환경 dev, prod운영 선택 가능
spring.application.name=cafe
spring.profiles.active=dev

# ----------------------------------------
# Multipart File Upload
# 업로드할 개별 파일 최대크기 10메가가 최대임
# 한 번 요청에서 올릴 수 있는 전체 파일 크기 50메가가 최대임
# 파일이 메모리에서 바로 저장될지, 디스크에 저장될지 결정하는 기준 크기. 0바이트는 바로 디스크에 저장
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=0B

# ----------------------------------------
# Static Resource Settings
# 정적 리소스를 어디서 불러올지 지정 app.upload.dir로 지정하긴 했는데 변경 가능
# 스피링이 자동으로 정적 리소스를 매핑할지 선택 ture로 활성화임
spring.web.resources.static-locations=classpath:/static/,file:${app.upload.dir}/
spring.web.resources.add-mappings=true

# ----------------------------------------
# Logging
# 전체 로그 기본 레벨을 INFO로 설정 (로그 확인은 스프링부트 서버 실행 후 콘솔창에서!
# 웹 요청 관련 로그는 INFO 수준만 출력
# SQL 쿼리문을 로그에 보여줌 (실행되는 쿼리문만
# SQL 실행 시 바인딩된 파라미터 값까지 로그에 보여줌
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# ----------------------------------------
# Custom App Settings
# 업로드 파일이 저장될 디렉토리 cafe-review/uploads에 지정해두긴 했는데 변경 가능
# 리뷰에 업로드 가능한 이미지 개수 제한 최대 5장이라..
app.upload.dir=${user.home}/cafe-review/uploads
app.upload.max-images-per-review=5

# 리뷰 별점 설정
# 최소값 최대값 아래 확인
# 간격은 0.5 기준! 즉 0.5 단위로 별점을 올릴 수 있단 말임
rating.min=0.0
rating.max=5.0
rating.step=0.5

# API 서버와 연결될 때까지 기다리는 시간 ms니까 밀리 세컨드로 계산 해서 3초란 말임
# 데이터 읽기 최대 대기 시간
# 데이터 쓰기 최대 대기 시간
# 카카오 API 인증키 (환경변수에서 KAKAO_REST_API_KEY 읽어옴
# 구글 지도 QPI 인증키 인데 카카오로 쓸지 선택 사항임
app.external.connect-timeout-ms=3000
app.external.read-timeout-ms=5000
app.external.write-timeout-ms=5000
app.external.kakao.rest-api-key=${KAKAO_REST_API_KEY:a2ed26f1ff8c196702de6b2f52470d05}
# Kakao OAuth ??
kakao.api.key=${KAKAO_REST_API_KEY:a2ed26f1ff8c196702de6b2f52470d05}
kakao.redirect-uri=http://localhost:8080/user/kakao/callback


# app.external.google.maps-api-key=${GOOGLE_MAPS_API_KEY:}

# ----------------------------------------
# Server
# ----------------------------------------
server.port=8081

# ----------------------------------------
# JPA / Hibernate
# JPA가 데이터베이스 스키마를 어떻게 관리할지 결정하는 옵션 none, create, create-drop, update validate 가 있음
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.default_batch_fetch_size=50

# ----------------------------------------
# MariaDB
# 마리아디비 드라이버
# DB연결 주소 우린 로컬호슽 DB라 127.0.0.1:3306 임, 유니코드 문도 있는데 한글 깨짐 방지임, 오토리커넥트 찾아보니까 자동 재연결인거 같음, 서버타임존은 한국시간대로 맞춤
# root는 DB사용자명 임
# 패스워드는 없는게 낫지
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/cafe_dev?useUnicode=true&characterEncoding=utf8&autoReconnect=true&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=

# ----------------------------------------
# Thymeleaf
# 템플릿 캐시 비활성화함 개발중에 즉시 반영되어야 하기 때문
# HTML 템플릿을 읽어올 위치
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/

